(wires:[((2,1),(16,2)),((29,4),(18,9)),((29,3),(18,2)),((7,17),(16,25)),((7,16),(16,18)),((7,7),(16,17)),((7,8),(16,24)),((7,14),(16,4)),((7,15),(16,11)),((18,3),(19,3)),((19,3),(18,7)),((18,7),(15,7)),((15,7),(16,9)),((16,16),(15,14)),((15,14),(18,14)),((18,14),(19,10)),((19,10),(18,10)),((18,17),(19,17)),((19,17),(18,21)),((18,21),(15,21)),((15,21),(16,23)),((18,24),(34,10)),((7,6),(16,10)),((7,5),(16,3)),((4,13),(5,14)),((4,4),(5,5)),((29,5),(18,16)),((29,6),(18,23)),((33,3),(31,3))],components:[({"In":(name:"Carry In",bits:1,index:0)},(2,1),Left),({"In":(name:"A",bits:4,index:3)},(4,4),Up),({"Splitter":(bits:1,outputs:[1,2,4,8])},(6,5),Right),({"In":(name:"B",bits:4,index:4)},(4,13),Up),({"Splitter":(bits:1,outputs:[1,2,4,8])},(6,14),Right),({"Out":(name:"Carry Out",bits:1,index:1)},(34,10),Right),({"Ic":"adder_1.logimu"},(16,1),Up),({"Ic":"adder_1.logimu"},(16,8),Up),({"Ic":"adder_1.logimu"},(16,15),Up),({"Ic":"adder_1.logimu"},(16,22),Up),({"Merger":(bits:1,inputs:[1,2,4,8])},(30,3),Right),({"Out":(name:"Result",bits:4,index:0)},(33,3),Right)],script:"; Check if 8 + 5 produces 13\n(test \"Add 8 + 5\"\n\t(in \"Carry In\" 0)\n\t(in \"A\" 8)\n\t(in \"B\" 5)\n\t(run)\n\t(assert (= (out \"Result\") 13))\n\t(assert (= (out \"Carry Out\") 0)))\n\n; Check all operations from 0 to 15 inclusive\n; This does not check the carry in or out.\n(test \"Add all\"\n\t(in \"Carry In\" 0)\n\t(for a from 0 to 16\n\t\t(for b from 0 to 16\n\t\t\t(in \"A\" a)\n\t\t\t(in \"B\" b)\n\t\t\t(run)\n\t\t\t(assert (= (out \"Result\") (% (+ a b) 16))))))\n\n; This test will always fail...\n(test \"Must fail\"\n\t; ... because false is false\n\t(assert false))")