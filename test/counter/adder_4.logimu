(wires:[(from:(x:2,y:1),to:(x:16,y:2)),(from:(x:29,y:4),to:(x:18,y:9)),(from:(x:29,y:3),to:(x:18,y:2)),(from:(x:7,y:17),to:(x:16,y:25)),(from:(x:7,y:16),to:(x:16,y:18)),(from:(x:7,y:7),to:(x:16,y:17)),(from:(x:7,y:8),to:(x:16,y:24)),(from:(x:7,y:14),to:(x:16,y:4)),(from:(x:7,y:15),to:(x:16,y:11)),(from:(x:18,y:3),to:(x:19,y:3)),(from:(x:19,y:3),to:(x:18,y:7)),(from:(x:18,y:7),to:(x:15,y:7)),(from:(x:15,y:7),to:(x:16,y:9)),(from:(x:16,y:16),to:(x:15,y:14)),(from:(x:15,y:14),to:(x:18,y:14)),(from:(x:18,y:14),to:(x:19,y:10)),(from:(x:19,y:10),to:(x:18,y:10)),(from:(x:18,y:17),to:(x:19,y:17)),(from:(x:19,y:17),to:(x:18,y:21)),(from:(x:18,y:21),to:(x:15,y:21)),(from:(x:15,y:21),to:(x:16,y:23)),(from:(x:18,y:24),to:(x:34,y:10)),(from:(x:7,y:6),to:(x:16,y:10)),(from:(x:7,y:5),to:(x:16,y:3)),(from:(x:4,y:13),to:(x:5,y:14)),(from:(x:4,y:4),to:(x:5,y:5)),(from:(x:29,y:5),to:(x:18,y:16)),(from:(x:29,y:6),to:(x:18,y:23)),(from:(x:33,y:3),to:(x:31,y:3))],components:[({"In":(name:"Carry In",bits:1,index:0)},(x:2,y:1),Left),({"In":(name:"A",bits:4,index:3)},(x:4,y:4),Up),({"Splitter":(bits:1,outputs:[1,2,4,8])},(x:6,y:5),Right),({"In":(name:"B",bits:4,index:4)},(x:4,y:13),Up),({"Splitter":(bits:1,outputs:[1,2,4,8])},(x:6,y:14),Right),({"Out":(name:"Carry Out",bits:1,index:1)},(x:34,y:10),Right),({"Ic":"adder_1.logimu"},(x:16,y:1),Up),({"Ic":"adder_1.logimu"},(x:16,y:8),Up),({"Ic":"adder_1.logimu"},(x:16,y:15),Up),({"Ic":"adder_1.logimu"},(x:16,y:22),Up),({"Merger":(bits:1,inputs:[1,2,4,8])},(x:30,y:3),Right),({"Out":(name:"Result",bits:4,index:0)},(x:33,y:3),Right)],script:"; Check if 8 + 5 produces 13\n(test \"Add 8 + 5\"\n\t(in \"Carry In\" 0)\n\t(in \"A\" 8)\n\t(in \"B\" 5)\n\t(run)\n\t(assert (= (out \"Result\") 13))\n\t(assert (= (out \"Carry Out\") 0)))\n\n; Check all operations from 0 to 15 inclusive\n; This does not check the carry in or out.\n(test \"Add all\"\n\t(in \"Carry In\" 0)\n\t(for a from 0 to 16\n\t\t(for b from 0 to 16\n\t\t\t(in \"A\" a)\n\t\t\t(in \"B\" b)\n\t\t\t(run)\n\t\t\t(assert (= (out \"Result\") (% (+ a b) 16))))))\n\n; This test will always fail...\n(test \"Must fail\"\n\t; ... because false is false\n\t(assert false))")